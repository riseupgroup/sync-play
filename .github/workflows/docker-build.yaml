name: Build and Push Docker Image

on: 
  workflow_call:
    inputs:
      tag:
        description: "Docker image tag"
        required: true
        type: string
      repository:
        description: "Docker Hub repository"
        required: true
        type: string
    secrets:
      username:
        description: "Docker Hub username"
        required: true
      token:
        description: "Docker Hub token"
        required: true
jobs:
  amd64:
    runs-on: ubuntu-latest
    outputs:
      digest: ${{ steps.build.outputs.digest }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.username }}
          password: ${{ secrets.token }}

      - name: Build Docker Image
        id: build
        run: |
          docker buildx create --use
          docker buildx build \
            --platform linux/amd64 \
            -t ${{ inputs.repository }} \
            --output push-by-digest=true,type=image,push=true \
            --metadata-file=metadata.json \
            .
          DIGEST=$(jq -r '.["containerimage.digest"]' metadata.json)
          echo "digest=$DIGEST" >> "$GITHUB_OUTPUT"
  
  i386:
    runs-on: ubuntu-latest
    outputs:
      digest: ${{ steps.build.outputs.digest }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.username }}
          password: ${{ secrets.token }}

      - name: Build Docker Image
        id: build
        run: |
          docker buildx create --use
          docker buildx build \
            --platform linux/386 \
            -t ${{ inputs.repository }} \
            --output push-by-digest=true,type=image,push=true \
            --metadata-file=metadata.json \
            .
          DIGEST=$(jq -r '.["containerimage.digest"]' metadata.json)
          echo "digest=$DIGEST" >> "$GITHUB_OUTPUT"
  
  arm64v8:
    runs-on: ubuntu-24.04-arm
    outputs:
      digest: ${{ steps.build.outputs.digest }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.username }}
          password: ${{ secrets.token }}

      - name: Build Docker Image
        id: build
        run: |
          docker buildx create --use
          docker buildx build \
            --platform linux/arm64/v8 \
            -t ${{ inputs.repository }} \
            --output push-by-digest=true,type=image,push=true \
            --metadata-file=metadata.json \
            .
          DIGEST=$(jq -r '.["containerimage.digest"]' metadata.json)
          echo "digest=$DIGEST" >> "$GITHUB_OUTPUT"

  armv7:
    runs-on: ubuntu-24.04-arm
    outputs:
      digest: ${{ steps.build.outputs.digest }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.username }}
          password: ${{ secrets.token }}

      - name: Build Docker Image
        id: build
        run: |
          docker buildx create --use
          docker buildx build \
            --platform linux/arm/v7 \
            -t ${{ inputs.repository }} \
            --output push-by-digest=true,type=image,push=true \
            --metadata-file=metadata.json \
            .
          DIGEST=$(jq -r '.["containerimage.digest"]' metadata.json)
          echo "digest=$DIGEST" >> "$GITHUB_OUTPUT"
  
  push-docker:
    runs-on: ubuntu-latest
    needs: [amd64, i386, arm64v8, armv7]
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.username }}
          password: ${{ secrets.token }}
      
      - name: Merge and push
        run: |
          docker buildx imagetools create \
            --tag ${{ inputs.repository }}:${{ inputs.tag }} \
            ${{ needs.amd64.outputs.digest }} \
            ${{ needs.i386.outputs.digest }} \
            ${{ needs.arm64v8.outputs.digest }} \
            ${{ needs.armv7.outputs.digest }} 
